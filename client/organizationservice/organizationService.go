// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: organization.proto

package organizationservice

import (
	"context"

	"github.com/ziptako/organization/organization"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateOrganizationRequest  = organization.CreateOrganizationRequest
	CreateOrganizationResponse = organization.CreateOrganizationResponse
	DeleteOrganizationRequest  = organization.DeleteOrganizationRequest
	DeleteOrganizationResponse = organization.DeleteOrganizationResponse
	GetAncestorsRequest        = organization.GetAncestorsRequest
	GetAncestorsResponse       = organization.GetAncestorsResponse
	GetDescendantsRequest      = organization.GetDescendantsRequest
	GetDescendantsResponse     = organization.GetDescendantsResponse
	GetOrganizationRequest     = organization.GetOrganizationRequest
	ListOrganizationsRequest   = organization.ListOrganizationsRequest
	ListOrganizationsResponse  = organization.ListOrganizationsResponse
	Organization               = organization.Organization
	OrganizationTree           = organization.OrganizationTree
	UpdateOrganizationRequest  = organization.UpdateOrganizationRequest

	OrganizationService interface {
		// CreateOrganization 创建组织节点
		CreateOrganization(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*CreateOrganizationResponse, error)
		// GetOrganization 获取组织节点
		GetOrganization(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
		// UpdateOrganization 更新组织节点名称
		UpdateOrganization(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error)
		// DeleteOrganization 删除组织节点
		DeleteOrganization(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*DeleteOrganizationResponse, error)
		// ListOrganizations 分页查询子节点
		ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error)
		// GetAncestors 获取祖先链
		GetAncestors(ctx context.Context, in *GetAncestorsRequest, opts ...grpc.CallOption) (*GetAncestorsResponse, error)
		// GetDescendants 获取后代树
		GetDescendants(ctx context.Context, in *GetDescendantsRequest, opts ...grpc.CallOption) (*GetDescendantsResponse, error)
	}

	defaultOrganizationService struct {
		cli zrpc.Client
	}
)

func NewOrganizationService(cli zrpc.Client) OrganizationService {
	return &defaultOrganizationService{
		cli: cli,
	}
}

// CreateOrganization 创建组织节点
func (m *defaultOrganizationService) CreateOrganization(ctx context.Context, in *CreateOrganizationRequest, opts ...grpc.CallOption) (*CreateOrganizationResponse, error) {
	client := organization.NewOrganizationServiceClient(m.cli.Conn())
	return client.CreateOrganization(ctx, in, opts...)
}

// GetOrganization 获取组织节点
func (m *defaultOrganizationService) GetOrganization(ctx context.Context, in *GetOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	client := organization.NewOrganizationServiceClient(m.cli.Conn())
	return client.GetOrganization(ctx, in, opts...)
}

// UpdateOrganization 更新组织节点名称
func (m *defaultOrganizationService) UpdateOrganization(ctx context.Context, in *UpdateOrganizationRequest, opts ...grpc.CallOption) (*Organization, error) {
	client := organization.NewOrganizationServiceClient(m.cli.Conn())
	return client.UpdateOrganization(ctx, in, opts...)
}

// DeleteOrganization 删除组织节点
func (m *defaultOrganizationService) DeleteOrganization(ctx context.Context, in *DeleteOrganizationRequest, opts ...grpc.CallOption) (*DeleteOrganizationResponse, error) {
	client := organization.NewOrganizationServiceClient(m.cli.Conn())
	return client.DeleteOrganization(ctx, in, opts...)
}

// ListOrganizations 分页查询子节点
func (m *defaultOrganizationService) ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error) {
	client := organization.NewOrganizationServiceClient(m.cli.Conn())
	return client.ListOrganizations(ctx, in, opts...)
}

// GetAncestors 获取祖先链
func (m *defaultOrganizationService) GetAncestors(ctx context.Context, in *GetAncestorsRequest, opts ...grpc.CallOption) (*GetAncestorsResponse, error) {
	client := organization.NewOrganizationServiceClient(m.cli.Conn())
	return client.GetAncestors(ctx, in, opts...)
}

// GetDescendants 获取后代树
func (m *defaultOrganizationService) GetDescendants(ctx context.Context, in *GetDescendantsRequest, opts ...grpc.CallOption) (*GetDescendantsResponse, error) {
	client := organization.NewOrganizationServiceClient(m.cli.Conn())
	return client.GetDescendants(ctx, in, opts...)
}
